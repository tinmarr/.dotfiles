#!/usr/bin/env zsh
# Powershell prompt
# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || . ~/.p10k.zsh
. ~/.zsh/powerlevel10k/powerlevel10k.zsh-theme

# ZSH Shell options
# https://zsh.sourceforge.io/Doc/Release/Options.html
unsetopt beep
setopt correct
setopt correct
setopt histignorealldups sharehistory

# Enable vi mode
bindkey -v

# key binds
bindkey "^[[1;5C" forward-word
bindkey "^[[1;5D" backward-word
bindkey '^H' backward-kill-word
bindkey "^[[3~" delete-char

# Keep 1000 lines of history within the shell and save it to ~/.zsh_history:
HISTSIZE=1000
SAVEHIST=1000
HISTFILE=~/.zsh_history

# append completions to fpath
# Use modern completion system
zstyle :compinstall filename '/home/martin/.zshrc'

fpath=(~/.zsh/completions $fpath)

zstyle ':completion:*' menu select
zstyle ':completion:*' matcher-list '' 'm:{a-zA-Z}={A-Za-z}'

# Plugins
. ~/.zsh/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
. ~/.zsh/zsh-autosuggestions/zsh-autosuggestions.zsh
. ~/.zsh/zsh-history-substring-search/zsh-history-substring-search.zsh

# setup history subsearch
bindkey '^[[A' history-substring-search-up
bindkey '^[[B' history-substring-search-down
bindkey '^K' history-substring-search-up
bindkey '^J' history-substring-search-down

# Standard Terminal Variables
export LANG=en_US.UTF-8
export EDITOR="emacs -nw"
export GPG_TTY=$TTY


# Load various shell utilities
eval "$(direnv hook zsh)"
eval "$(fzf --zsh)"
eval "$(zoxide init zsh)"
eval "$(thefuck --alias fk)"

# lazy load pyenv
if [[ -e ~/.pyenv ]]
then
    PYENV_GLOBALS=(pyenv python pip)

    _load_pyenv() {
        source ~/.local/bin/lazy-pyenv
    }

    for cmd in "${PYENV_GLOBALS[@]}"; do
        eval "function ${cmd}(){ unset -f ${PYENV_GLOBALS[*]} 2> /dev/null; echo 'loading pyenv'; _load_pyenv; unset -f _load_pyenv; ${cmd} \$@; }"
    done

    unset cmd pyenv_GLOBALS
fi

# Use bat in manpages
export MANROFFOPT="-c"
export MANPAGER="sh -c 'col -bx | bat -l man -p'"

#### Quick aliases ####
alias ls="exa --icons --group-directories-first"
alias l="ls --git-ignore"
alias la="ls -a"
alias ll="ls -l --git --git-ignore"
alias lla="ls -l -a --git"
alias e="emacsclient -nw"
alias r="ranger"
alias h="history 0"
alias s="kitten ssh"

#### Macros ####
pgadmin () {
    pyenv activate pgadmin
    pgadmin4
}
alias updategrub="sudo grub-mkconfig -o /boot/grub/grub.cfg"
alias pipunall="pip freeze | grep -v '^-e' | xargs pip uninstall -y"
tzupdate () {
    # Function because the curl is evaluated as an alias
    timedatectl set-timezone $(curl https://ipapi.co/timezone)
}
alias gitrmbranches="git branch --list| grep -v \* | xargs git branch -D"
gitc () {
    git add .
    git commit -m $1
    git push
}
alias gits="(git fetch &>/dev/null &) && git status"
alias gitl="git log --compact-summary"

#### Update System ####
update () {
    sudo test
    curl "https://archlinux.org/mirrorlist/?country=CA&protocol=http&protocol=https&ip_version=4&ip_version=6&use_mirror_status=on" > /tmp/mirrorlist
    sed -i 's/#//' /tmp/mirrorlist
    sudo mv /tmp/mirrorlist /etc/pacman.d/
    yay -Syyu --answerclean A --answerdiff N --removemake --noconfirm
    if command -v pyenv &> /dev/null; then
        pyenv update
    fi
    if command -v rustup &> /dev/null; then
        rustup update
    fi
    cd ~/dotfiles
    unstowall
    git pull
    stowall
    cd ~
    exec $SHELL
}

# init completions
autoload -Uz compinit
compinit

# Load Colors
BLACK=$(tput setaf 0)
RED=$(tput setaf 1)
GREEN=$(tput setaf 2)
YELLOW=$(tput setaf 3)
LIME_YELLOW=$(tput setaf 190)
POWDER_BLUE=$(tput setaf 153)
BLUE=$(tput setaf 4)
MAGENTA=$(tput setaf 5)
CYAN=$(tput setaf 6)
WHITE=$(tput setaf 7)
BRIGHT=$(tput bold)
NORMAL=$(tput sgr0)
BLINK=$(tput blink)
REVERSE=$(tput smso)
UNDERLINE=$(tput smul)

printf "$MAGENTA""Welcome $(whoami)!""$WHITE""\n"
echo "Today is $(date +%A,\ %B\ %d,\ %Y)"
echo "The time now is $(date +%Hh%M)"
