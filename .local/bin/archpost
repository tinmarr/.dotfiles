#!/usr/bin/env bash

mag="\e[35m"
green="\e[32m"
reset="\e[m"

printf "$mag""Install WM things? [Y/n] ""$reset"
read wm
if [[ "$wm" != "n" ]]; then
    printf "$mag""Which WM? [(a)wesome/(q)tile] ""$reset"
    read which
    printf "$mag""Touchpad? [Y/n]""$reset"
    read touchpad
    printf "$mag""Intel Graphics? [Y/n]""$reset"
    read intel
    printf "$mag""Nvidia Card? [Y/n]""$reset"
    read nvidia
fi

# Dotfile requirements
sudo pacman -S --needed base-devel openssl zlib tk git github-cli zsh openssh neovim acpi alsa-utils ripgrep eza bat direnv

# Configure user
chsh -s /bin/zsh
sudo usermod -a -G video $USER

# Setup dotfiles
cd $HOME
printf "$mag""Authenticate gh with a new SSH Key (auth with web browser)""$reset""\n"
gh auth login # login with ssh 
gh repo clone tinmarr/dotfiles -- --bare
mv dotfiles.git .dotfiles
git --git-dir=.dotfiles --work-tree=. checkout -f
git --git-dir=.dotfiles --work-tree=. submodule update --init --recursive
git --git-dir=.dotfiles --work-tree=. config --local status.showUntrackedFiles no

# Setup fonts
fc-cache -f -v

# Install utilities
printf "$mag""Installing Utilities""$reset""\n"
curl https://pyenv.run | bash
curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash
git clone https://aur.archlinux.org/yay.git && cd yay && makepkg -si && cd .. && rm -rf yay
git clone --depth 1 https://github.com/wbthomason/packer.nvim ~/.local/share/nvim/site/pack/packer/start/packer.nvim

yay -S --needed neofetch btop ranger man xdg-user-dirs

case $wm in 
    "n" | "N")
        echo "Skipping WM things"
        ;;
    *)
        sudo pacman -S xorg
        case "$which" in 
            "q"|"qtile")
                yay -S --needed qtile qtile-extras python-psutil
                ;;
            "a"|"awesome")
                yay -S --needed awesome
                ;;
            *)
                printf "$mag""Not a valid option. No WM installed.""$reset"
                ;;
        esac

        yay -Rns xorg-xbacklight
        localectl --no-convert set-x11-keymap us pc105 "" "compose:ralt"

        if [[ "$touchpad" != "n" ]]; then
            echo 'Section "InputClass"
                Identifier "devname"
                Driver "libinput"
                MatchIsTouchpad "on"
                Option "Tapping" "on"
                Option "ClickMethod" "clickfinger"
                Option "NaturalScrolling" "true"
            EndSection' | sudo tee /etc/X11/xorg.conf.d/30-touchpad.conf > /dev/null
        fi 

        if [[ "$intel" != "n" ]]; then
            echo 'Section "Device"
                Identifier "Intel Graphics"
                Driver "intel"
                Option "TearFree" "true"
            EndSection' | sudo tee /etc/X11/xorg.conf.d/20-intel.conf > /dev/null
        fi 

        if [[ "$nvidia" != "n" ]]; then
            sudo pacman -S --needed nvidia nvidia-utils lib32-nvidia-utils
        fi

        yay -S --needed kdeconnect kitty rofi pavucontrol betterlockscreen autorandr \
            dunst qt5ct-kde picom python-dbus-next lxappearance-gtk3 gnu-free-fonts ly \
            brave-beta-bin thunar visual-studio-code-bin obsidian playerctl tlp pinentry-rofi \
            rofi-calc xclip xdotool rofi-emoji acpilight noto-fonts noto-fonts-emoji
        sudo systemctl enable ly
        sudo systemctl disable getty@tty2.service
        sudo systemctl enable autorandr
        sudo systemctl enable autorandr-lid-listener.service
        sudo cp ~/.config/tlp.conf /etc
        sudo systemctl enable tlp
        gh repo clone tinmarr/obsidian-vault
        printf "$mag""The following tools need to be configured manually:
            - brave
            - visual-studio-code""$reset""\n"
        ;;
esac
printf "$mag""neovim will now launch. Please run :PackerSync.\nPress any key to continue.""$reset"
read tmp
nvim

printf "$green""Setup Complete!""$reset""\n"
