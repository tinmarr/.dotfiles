#+TITLE: GNU Emacs Config
#+AUTHOR: Martin Chaperot
#+PROPERTY: header-args :tangle init.el
#+OPTIONS: toc:2

* Table of Contents :toc:

* Package Manager 
Configure the package manager and package manager sources. We also want to use ~use-package~.

#+begin_src emacs-lisp
  ;; Setup Package Manager
  (require 'package)

  (add-to-list 'package-archives '("melpa" . "https://melpa.org/packages/") t)

  (package-initialize)
  (unless package-archive-contents
    (package-refresh-contents))

  ;; Initialize use-package
  (unless (package-installed-p 'use-package)
    (package-install 'use-package))

  (require 'use-package)
  (setq use-package-always-ensure t)
#+end_src

* Keyboard
** EVIL Mode
#+begin_src emacs-lisp
  (use-package evil
    :init
    (setq evil-undo-system 'undo-redo)
    (setq evil-want-C-d-scroll t)
    (setq evil-want-C-u-scroll t)
    (setq evil-search-module 'swiper)
    (setq evil-auto-indent nil)
    :config
    (evil-mode 1))
#+end_src

** General 
| Keybinding | Map      | Description                     |
|------------+----------+---------------------------------|
| SPC i      | org-mode | Edit a latex fragment (preview) |
| C-p        |          | Search for a file               |

#+begin_src emacs-lisp
  (use-package general
    :after evil
    :config
    (general-create-definer spc-def
      :states 'normal
      :prefix "SPC")
    (spc-def org-mode-map "i" 'org-edit-latex-fragment)
    (general-define-key :states '(normal insert) "C-p" 'find-file)
  )
#+end_src


* UI Tweaks
** Theme
As always, I use the dracula theme
#+begin_src emacs-lisp
  (use-package dracula-theme
    :config
    (load-theme 'dracula t))
#+end_src

** Font
#+begin_src emacs-lisp
  (set-face-attribute 'default nil :font "JetBrainsMono Nerd Font Mono" :height 110)
#+end_src

** Builtin UI Tweaks
#+begin_src emacs-lisp
  (setq inhibit-startup-message t)

  (scroll-bar-mode -1)
  (tool-bar-mode -1)
  (tooltip-mode -1)

  (menu-bar-mode -1)

  ;; Line numbers
  (column-number-mode)
  (setq-default display-line-numbers 'relative)
#+end_src

** Other Tweaks
*** Rainbow Delimiters
Makes ~(~, ~[~, and ~{~ rainbow!
#+begin_src emacs-lisp
  (use-package rainbow-delimiters
    :hook (prog-mode . rainbow-delimiters-mode))
#+end_src

* Org Mode
#+begin_src emacs-lisp
  (use-package org
    :config
    (setq org-hide-emphasis-markers t)
    (setq org-startup-indented t))
    (setq org-startup-with-latex-preview t)
#+end_src
** Org Superstar
~org-superstar~ handles the nice rendering of bullets in headers and lists
#+begin_src emacs-lisp 
  (use-package org-superstar
    :hook (org-mode . (lambda () (org-superstar-mode 1)))
    :config
    (setq org-superstar-leading-bullet "  ")
    (setq org-superstar-special-todo-items t))
#+end_src

** Latex Formating
#+begin_src emacs-lisp
  (setq org-format-latex-options 
    '(:foreground default 
      :background default 
      :scale 3
      :html-foreground "Black" 
      :html-background "Transparent" 
      :html-scale 1.0 
      :matchers ("begin" "$1" "$" "$$" "\\(" "\\[")))
  (add-hook 'org-mode-hook
    (lambda ()
        (add-hook 'after-save-hook (lambda () (org-latex-preview)))))
#+end_src



* Quality of Life
** Ivy/Swiper
Handles the better autocompletion/search functionality in the minibuffer
#+begin_src emacs-lisp
(use-package ivy
:bind (:map ivy-minibuffer-map
	("C-l" . ivy-alt-done)
	("TAB" . ivy-alt-done)
	("C-j" . ivy-next-line)
	("C-k" . ivy-previous-line))
:config
(ivy-mode 1))

(use-package swiper)
#+end_src

** Auto Tangleing
Automatically tangles my org files
#+begin_src emacs-lisp
(add-hook 'org-mode-hook
    (lambda ()
	(add-hook 'after-save-hook #'org-babel-tangle
		nil 'make-it-local)))
#+end_src

** Disable auto indenting
#+begin_src emacs-lisp
(when (fboundp 'electric-indent-mode) (electric-indent-mode -1))
#+end_src


